// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// pcatf_core
List pcatf_core(arma::mat X, arma::mat U, arma::mat V, arma::vec d, double lambda, int K, int maxiter, int solveV, int verbose, double tol);
RcppExport SEXP _clever_pcatf_core(SEXP XSEXP, SEXP USEXP, SEXP VSEXP, SEXP dSEXP, SEXP lambdaSEXP, SEXP KSEXP, SEXP maxiterSEXP, SEXP solveVSEXP, SEXP verboseSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type V(VSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d(dSEXP);
    Rcpp::traits::input_parameter< double >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< int >::type K(KSEXP);
    Rcpp::traits::input_parameter< int >::type maxiter(maxiterSEXP);
    Rcpp::traits::input_parameter< int >::type solveV(solveVSEXP);
    Rcpp::traits::input_parameter< int >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(pcatf_core(X, U, V, d, lambda, K, maxiter, solveV, verbose, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_clever_pcatf_core", (DL_FUNC) &_clever_pcatf_core, 10},
    {NULL, NULL, 0}
};

RcppExport void R_init_clever(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
